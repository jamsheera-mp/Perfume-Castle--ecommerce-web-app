<%- include('../partials/user/header.ejs') %>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" rel="nofollow">Home</a>
                    <span></span> Shop <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">

                <div id="checkout">
                    <div class="row d-flex">
                        <div class="col-md-6">

                            <!-------------------------------------------Order Summary Section Begins ------------------------------------------------------------------------------->
                            <!-- Order Summary Section -->
                            <div class=" card order_review">

                                <div class="card-header ">
                                    <h4>Your Orders</h4>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive order_table text-center">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th colspan="2">Product</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% if (cartItems && cartItems.length> 0) { %>
                                                    <% let totalPrice=0; %>
                                                        <% cartItems.forEach(item=> { %>
                                                            <% const productTotal=item.price * item.quantity; %>
                                                                <% totalPrice +=productTotal; %>
                                                                    <tr>
                                                                        <td class="image product-thumbnail">
                                                                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                                                                alt="<%= item.productId.productName %>" />
                                                                        </td>
                                                                        <td>
                                                                            <h5><a
                                                                                    href="/product/<%= item.productId._id %>">
                                                                                    <%= item.productId.productName %>
                                                                                </a></h5>
                                                                            <span class="product-qty">x <%=
                                                                                    item.quantity %>
                                                                            </span>
                                                                        </td>
                                                                        <td>₹<%= (item.price * item.quantity).toFixed(2)
                                                                                %>
                                                                        </td>
                                                                    </tr>
                                                                    <% }); %>
                                                                        <tr>
                                                                            <th>SubTotal</th>
                                                                            <td colspan="2">₹<%= subtotal.toFixed(2) %>
                                                                            </td>
                                                                        </tr>
                                                                        <tr>
                                                                            <th>Shipping</th>
                                                                            <td colspan="2"><em>Free Shipping</em>
                                                                            </td>
                                                                        </tr>
                                                                        <!----coupon information----->
                                                                        <% if (appliedCoupon) { %>
                                                                            <tr>
                                                                                <th>Coupon Applied</th>
                                                                                <td colspan="2">
                                                                                    <%= couponCode %>
                                                                                </td>
                                                                            </tr>
                                                                            <tr>
                                                                                <th>Discount</th>
                                                                                <td colspan="2">-₹<%=
                                                                                        couponDiscount.toFixed(2) %>
                                                                                </td>
                                                                            </tr>
                                                                            <% }else{ %>
                                                                                <tr>
                                                                                    <th>Discount</th>
                                                                                    <td colspan="2">₹0.00</td>
                                                                                </tr>
                                                                                <% } %>
                                                                                    <tr>
                                                                                        <th>Total</th>
                                                                                        <td colspan="2"
                                                                                            class="product-subtotal">
                                                                                            <span
                                                                                                class="font-xl text-brand fw-900">₹
                                                                                                <%= total.toFixed(2) %>
                                                                                            </span>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <% } else { %>
                                                                                        <tr>
                                                                                            <td colspan="3">Your cart is
                                                                                                empty.
                                                                                            </td>
                                                                                        </tr>
                                                                                        <% } %>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>

                            <!-------------------------------------------Order Summary Section Ends ------------------------------------------------------------------------------->

                            <!--------------------------------------------------- New Coupon Section ------------------------------------------->
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="mb-30">
                                        <div class="heading_s1 mb-3">
                                            <h4>Apply Coupon</h4>
                                        </div>
                                        <div class="total-amount">
                                            <div class="left">
                                                <div class="coupon">
                                                    <form id="couponForm">
                                                        <div class="form-row row justify-content-center">
                                                            <div class="form-group col-lg-8">
                                                                <input class="form-control font-medium"
                                                                    name="couponCode" id="couponCode"
                                                                    placeholder="Enter Your Coupon">
                                                            </div>
                                                            <div class="form-group col-lg-4">
                                                                <button class="btn btn-sm btn-primary w-100"
                                                                    type="submit">
                                                                    <i class="fi-rs-label mr-10"></i>Apply
                                                                </button>
                                                            </div>

                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="couponInfo" style="display:none;">
                                        <p>Coupon applied: <span id="appliedCouponCode"></span>
                                        </p>
                                        <p>Discount: ₹<span id="couponDiscount"></span></p>
                                        <button id="removeCoupon">Remove Coupon</button>
                                    </div>
                                </div>
                            </div>
                            <!----------------------------------------------- End of New Coupon Section ------------------------------------>


                            <!----------------------------------------------------Payment Method Selection Begins-------------------------------------------------->
                            <div class="payment-method mt-5">
                                <div class="card mt-5">
                                    <div class="card-header">
                                        <h4 class="mb-30">Payment</h4>
                                    </div>

                                    <div class="card-body">
                                        <div class="payment_option">
                                            <div class="custome-radio">
                                                <input class="form-check-input" required="" type="radio"
                                                    name="payment_option" id="exampleRadios3" value="CashOnDelivery"
                                                    checked="" style="transform: scale(0.8);">
                                                <label class="form-check-label" for="exampleRadios3"
                                                    data-bs-toggle="collapse" data-target="#cashOnDelivery"
                                                    aria-controls="cashOnDelivery">Cash On Delivery</label>
                                            </div>
                                            <div class="custome-radio">
                                                <input class="form-check-input" required="" type="radio"
                                                    name="payment_option" id="exampleRadios4" value="Online"
                                                    style="transform: scale(0.8);">
                                                <label class="form-check-label" for="exampleRadios4"
                                                    data-bs-toggle="collapse" data-target="#cardPayment"
                                                    aria-controls="cardPayment">Online Payment</label>
                                            </div>
                                            <div class="custome-radio">
                                                <input class="form-check-input" required="" type="radio"
                                                    name="payment_option" id="exampleRadios5" value="wallet"
                                                    style="transform: scale(0.8);">
                                                <label class="form-check-label" for="exampleRadios5"
                                                    data-bs-toggle="collapse" data-target="#wallet"
                                                    aria-controls="wallet">Wallet</label>
                                            </div>
                                        </div>
                                    </div>

                                    <a id="placeOrderBtn" class="btn btn-fill-out btn-block mt-30">Place Order</a>
                                </div>
                            </div>
                        </div>

                        <!----------------------------------------------------Payment Method Selection Ends -------------------------------------------------->


                        <!--<a class="btn" id="placeOrderBtn">Place Order</button>-->

                        <!----------------------------------------------------Billing Details  -------------------------------------------------->
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <div class="mb-25">
                                        <h4>Billing Details</h4>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <!--------------------------------------------Existing addresses selection  ---------------------------------------->
                                    <div class="mb-4">

                                        <h6>Use Existing Address</h6>

                                        <div class="card-body p-2">
                                            <% if (addresses && addresses.length> 0) { %>
                                                <% addresses.forEach((addr, index)=> { %>
                                                    <% addr.address.forEach((addressItem)=> { %>
                                                        <div class="form-check mb-3">
                                                            <div>
                                                                <input class="form-check-input" type="radio"
                                                                    name="addressType" value="<%= addressItem._id %>"
                                                                    id="address<%= index %>"
                                                                    data-address='<%= JSON.stringify(addressItem) %>'
                                                                    checked>

                                                                <div id="address-<%= addressItem._id %>">
                                                                    <span class="badge bg-secondary">
                                                                        <%= addressItem.addressType %>
                                                                    </span>
                                                                    <p>
                                                                        <%= addressItem.name %><br>
                                                                            <%= addressItem.phone %>

                                                                                <br>

                                                                                <%= addressItem.city %>, <%=
                                                                                        addressItem.landMark %>,
                                                                                        <%= addressItem.district %>,
                                                                                            <%= addressItem.state %>
                                                                                                ,
                                                                                                <strong>
                                                                                                    <%= addressItem.pincode
                                                                                                        %>
                                                                                                </strong>
                                                                    </p>

                                                                </div>
                                                            </div>
                                                            <!----------------------------------------------------------- Edit Address Form Begins ----------------------------------------------->
                                                            <!-- Hidden Edit Form -->
                                                            <div id="editForm-<%= index %>" class="edit-form"
                                                                style="display: none;">
                                                                <form action="/editAddress/<%= addressItem._id %>"
                                                                    method="POST" id="editAddressForm-<%= index %>"
                                                                    onsubmit="submitEditForm('<%= index%>')">
                                                                    <div class="row mb-3">
                                                                        <div class="col-6">
                                                                            <label for="name-<%= index %>"
                                                                                class="form-label">
                                                                                Name</label>
                                                                            <input type="text" class="form-control"
                                                                                id="name-<%= index %>" name="name"
                                                                                value="<%= addressItem.name %>">
                                                                            <div class="invalid-feedback">Please
                                                                                enter
                                                                                the name.
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-6">
                                                                            <label for="phone-<%= index %>"
                                                                                class="form-label">Phone</label>
                                                                            <input type="text" class="form-control"
                                                                                id="phone-<%= index %>" name="phone"
                                                                                value="<%= addressItem.phone %>"
                                                                                pattern="\d{10}">
                                                                            <div class="invalid-feedback">Please
                                                                                enter a
                                                                                valid
                                                                                10-digit
                                                                                mobile number.</div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="row mb-3">
                                                                        <div class="col-6">
                                                                            <label for="pincode-<%= index %>"
                                                                                class="form-label">Pincode</label>
                                                                            <input type="text" class="form-control"
                                                                                id="pincode-<%= index %>" name="pincode"
                                                                                value="<%= addressItem.pincode %>"
                                                                                pattern="\d{6}">
                                                                            <div class="invalid-feedback">Please
                                                                                enter a
                                                                                valid
                                                                                6-digit
                                                                                pincode.</div>
                                                                        </div>
                                                                        <div class="col-6">
                                                                            <label for="city-<%= index %>"
                                                                                class="form-label">City/Town</label>
                                                                            <input type="text" class="form-control"
                                                                                id="city-<%= index %>" name="city"
                                                                                value="<%= addressItem.city %>">
                                                                            <div class="invalid-feedback">Please
                                                                                enter
                                                                                the
                                                                                city/town.</div>
                                                                        </div>
                                                                    </div>

                                                                    <div class="mb-3">
                                                                        <label for="landmark-<%= index %>"
                                                                            class="form-label">Landmark</label>
                                                                        <input type="text" class="form-control"
                                                                            id="landmark-<%= index %>" name="landMark"
                                                                            value="<%= addressItem.landMark %>">
                                                                        <div class="invalid-feedback">Please enter a
                                                                            landmark.</div>
                                                                    </div>

                                                                    <div class="mb-3">
                                                                        <label for="district-<%= index %>"
                                                                            class="form-label">District</label>
                                                                        <input type="text" class="form-control"
                                                                            id="district-<%= index %>" name="district"
                                                                            value="<%= addressItem.district %>">
                                                                        <div class="invalid-feedback">Please enter
                                                                            your
                                                                            district.
                                                                        </div>
                                                                    </div>

                                                                    <div class="mb-3">
                                                                        <label for="state-<%= index %>"
                                                                            class="form-label">State</label>
                                                                        <select name="state" id="state-<%= index %>"
                                                                            class="form-select">
                                                                            <option value="" selected disabled>
                                                                                --Select
                                                                                State--
                                                                            </option>



                                                                            <option value="Karnataka"
                                                                                <%=addressItem.state==="Karnataka"
                                                                                ? 'selected' : '' %>>Karnataka
                                                                            </option>
                                                                            <option value="Kerala"
                                                                                <%=addressItem.state==="Kerala"
                                                                                ? 'selected' : '' %>>Kerala</option>




                                                                        </select>
                                                                        <div class="invalid-feedback">Please select
                                                                            a
                                                                            state.</div>
                                                                    </div>

                                                                    <div class="row mb-3">
                                                                        <div class="col-6">
                                                                            <label for="altPhone-<%= index %>"
                                                                                class="form-label">Alternate
                                                                                Phone (Optional)</label>
                                                                            <input type="text" class="form-control"
                                                                                id="altPhone-<%= index %>"
                                                                                name="altPhone"
                                                                                value="<%= addressItem.altPhone || '' %>">
                                                                        </div>
                                                                        <div class="col-6">
                                                                            <label for="addressType">Address
                                                                                Type</label>
                                                                            <select name="addressType"
                                                                                class="form-select">
                                                                                <option value="Home"
                                                                                    <%=addressItem.addressType==='Home'
                                                                                    ? 'selected' : '' %>>Home
                                                                                </option>
                                                                                <option value="Work"
                                                                                    <%=addressItem.addressType==='Work'
                                                                                    ? 'selected' : '' %>>Work
                                                                                </option>
                                                                            </select>
                                                                            <div class="invalid-feedback">Please
                                                                                select
                                                                                an address
                                                                                type.
                                                                            </div>
                                                                        </div>

                                                                    </div>
                                                                    <div class=d-flex align-items-center>
                                                                        <button id="saveEditBtn-<%=index %>"
                                                                            type="submit" class="btn btn-primary">Save
                                                                            Changes</button>
                                                                        <button type="button" class="btn btn-secondary"
                                                                            onclick="toggleEditForm('<%= index %>')">
                                                                            Cancel</button>
                                                                    </div>


                                                                </form>
                                                            </div>

                                                            <!------------------------------------------------- Edit Address Form Ends --------------------------------------------------------------->
                                                            <!---------------------- Edit and Delete Buttons ------------------------->
                                                            <div class="d-flex align-items-center mb-3">

                                                                <button type="button"
                                                                    class="btn btn-sm btn-primary me-2  "
                                                                    onclick="toggleEditForm('<%= index %>')">Edit</button>

                                                                <form action="/deleteAddress/<%= addressItem._id %>"
                                                                    method="POST">
                                                                    <button type="submit"
                                                                        class="btn btn-sm btn-danger">Delete</button>
                                                                </form>
                                                            </div>

                                                            <% }); %>
                                                                <% }) %>
                                                                    <% } else { %>
                                                                        <p>No existing addresses found.Please add a
                                                                            new
                                                                            address
                                                                        </p>
                                                                        <% } %>
                                                        </div>
                                        </div>
                                    </div>
                                </div>
                                <!--------------------------------------------Existing addresses selection Ends ---------------------------------------->
                            </div>
                            <!----------------------------------------------Add New Address Section Begins  ------------------------------------------------------------->

                            <div class="card">
                                <div class="card-header">
                                    <h6 id="addAddressToggle" style="cursor:pointer;">+ Add New Address</h6>
                                </div>
                                <div class="card-body">
                                    <div id="new-address" style="display: none;" class="addAddress">
                                        <form action="/addAddress" method="POST" id="addAddressForm" novalidate>
                                            <div class="row mb-3">
                                                <div class="col-6">
                                                    <input type="text" name="name" id="name" class="form-control"
                                                        placeholder="Name" required>
                                                    <div class="invalid-feedback">Please enter the name.</div>
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" name="phone" id="phone" class="form-control"
                                                        placeholder="10-digit mobile number" pattern="\d{10}" required>
                                                    <div class="invalid-feedback">Please enter a valid 10-digit
                                                        mobile
                                                        number.</div>
                                                </div>
                                            </div>
                                            <div class="row mb-3">
                                                <div class="col-6">
                                                    <input type="text" name="pincode" id="pincode" class="form-control"
                                                        placeholder="Pincode" pattern="\d{6}" required>
                                                    <div class="invalid-feedback">Please enter a valid 6-digit
                                                        pincode.
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" name="city" id="city" class="form-control"
                                                        placeholder="City/Town" required>
                                                    <div class="invalid-feedback">Please enter the city/town.</div>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <input type="text" name="landMark" id="landMark" class="form-control"
                                                    placeholder="Landmark" required>
                                                <div class="invalid-feedback">Please enter a landmark.</div>
                                            </div>
                                            <div class="mb-3">
                                                <input type="text" name="district" id="district" class="form-control"
                                                    placeholder="District" required>
                                                <div class="invalid-feedback">Please enter your district.</div>
                                            </div>
                                            <div class="mb-3">
                                                <select name="state" id="state" id="state" class="form-select" required>

                                                    <option value="" selected disabled>--Select State--</option>
                                                    <option value="Andaman and Nicobar Islands">Andaman and Nicobar
                                                        Islands
                                                    </option>
                                                    <option value="Andhra Pradesh">Andhra Pradesh</option>
                                                    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                                    <option value="Assam">Assam</option>
                                                    <option value="Bihar">Bihar</option>
                                                    <option value="Chandigarh">Chandigarh</option>
                                                    <option value="Chhattisgarh">Chhattisgarh</option>
                                                    <option value="Dadra and Nagar Haveli">Dadra and Nagar Haveli
                                                    </option>
                                                    <option value="Daman and Diu">Daman and Diu</option>

                                                    <option value="Karnataka">Karnataka</option>
                                                    <option value="Kerala">Kerala</option>

                                                </select>
                                                <div class="invalid-feedback">Please select a state.</div>
                                            </div>
                                            <div class="row mb-3">
                                                <div class="col-6">
                                                    <input type="text" name="altPhone" id="altphone"
                                                        class="form-control" placeholder="Alternate Phone (Optional)">
                                                    <div class="invalid-feedback">Please enter a valid alternate
                                                        phone
                                                        number.</div>
                                                </div>
                                                <div class="col-6">
                                                    <label for="addressType" id="type">Address Type</label>
                                                    <select name="addressType" class="form-select" required>
                                                        <option value="Home">Home</option>
                                                        <option value="Work">Work</option>
                                                    </select>
                                                    <div class="invalid-feedback">Please select an address type.
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <button id="saveAddressBtn" type="submit" class="btn btn-primary">Save
                                                    Address</button>

                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <!----------------------------------------------Add New Address Section Ends  ------------------------------------------------------------->
                        </div> <!--billing details column ends-->
                    </div> <!--Row ends-->
                    <!-------------------------------------------Billing Details End ------------------------------------------------------------------------------->
                </div>
            </div> <!-- Container ends-->
        </section>




        <script>

            document.addEventListener('DOMContentLoaded', function () {
                console.log('DOM fully loaded');
                //-----------------------------coupon managment start---------------------------------------------------

                const couponForm = document.getElementById("couponForm");
                if (!couponForm) {
                    console.error("Coupon form not found. ");

                    return;
                }

                console.log('Coupon form found:', couponForm);


                couponForm.addEventListener("submit", async function (event) {
                    console.log('Form submitted');
                    event.preventDefault();
                    var couponCode = document.getElementById("couponCode").value;
                    console.log('Coupon code:', couponCode);

                    if (!couponCode) {
                        console.log('No coupon code entered');
                        Swal.fire({
                            title: 'Error',
                            text: 'Please enter a coupon code',
                            icon: 'error',
                            confirmButtonText: 'OK',
                        });
                    } else {
                        try {
                            console.log('Sending request to apply coupon');
                            var response = await fetch('/applyCoupon', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ couponCode: couponCode })
                            });
                            console.log('Response received');
                            var data = await response.json();
                            console.log('Response data:', data);

                            if (data.success) {
                                console.log('Coupon applied successfully');
                                document.getElementById("couponInfo").style.display = "block";
                                document.getElementById("appliedCouponCode").textContent = data.couponCode;
                                document.getElementById("couponDiscount").textContent = data.discount.toFixed(2);
                                document.getElementById("couponForm").style.display = "none";

                                // Update the total amount
                                const totalElement = document.querySelector('.product-subtotal .font-xl');
                                if (totalElement) {
                                    totalElement.textContent = `$${data.finalAmount.toFixed(2)}`;
                                } else {
                                    console.error('Total element not found');
                                }

                                Swal.fire({
                                    title: 'Success',
                                    text: 'Coupon applied successfully!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                });
                            } else {
                                console.log('Coupon application failed:', data.message);
                                Swal.fire({
                                    title: 'Error',
                                    text: data.message || 'Failed to apply coupon',
                                    icon: 'error',
                                    confirmButtonText: 'OK',
                                });
                            }
                        } catch (error) {
                            console.error('Error applying coupon:', error);
                            Swal.fire({
                                title: 'Error',
                                text: 'An unexpected error occurred. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK',
                            });
                        }
                    }
                });
                // Add this inside your existing DOMContentLoaded event listener
                const removeCouponBtn = document.getElementById('removeCoupon');

                removeCouponBtn.addEventListener('click', async function () {
                    const result = await Swal.fire({
                        title: 'Remove Coupon',
                        text: "Are you sure you want to remove this coupon?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, remove it!'
                    });

                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/removeCoupon', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            const data = await response.json();

                            if (data.success) {
                                // Show success message
                                await Swal.fire({
                                    title: 'Success',
                                    text: 'Coupon removed successfully!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                });

                                // Reset UI
                                document.getElementById("couponInfo").style.display = "none";
                                document.getElementById("couponForm").style.display = "block";
                                document.getElementById("couponCode").value = '';

                                // Update total amount by reloading the page
                                if (data.requiresRefresh) {
                                    location.reload();
                                    return;
                                }

                                // If no refresh required, update the total manually
                                if (data.updatedTotal) {
                                    const totalElement = document.querySelector('.product-subtotal .font-xl');
                                    if (totalElement) {
                                        totalElement.textContent = `$${data.updatedTotal.toFixed(2)}`;
                                    }
                                }
                            } else {
                                Swal.fire({
                                    
                                    text: data.message || 'Failed to remove coupon',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        } catch (error) {
                            console.error('Error removing coupon:', error);
                            Swal.fire({
                               
                                text: 'An error occurred while removing the coupon. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    }
                });

                //-----------------------------coupon managment end---------------------------------------------------


                //-------------------------------address managment start---------------------------------------------------
                // Get necessary elements
                const newAddressForm = document.getElementById('new-address');
                const addAddressToggle = document.getElementById('addAddressToggle');
                const existingAddresses = document.querySelectorAll('.form-check');

                // Show add address form by default if no addresses exist
                if (existingAddresses.length === 0) {
                    if (newAddressForm) {
                        newAddressForm.style.display = 'block';
                    }
                    if (addAddressToggle) {
                        addAddressToggle.innerHTML = '- Hide Address Form';
                    }
                }

                // Toggle Add Address Form
                if (addAddressToggle) {
                    addAddressToggle.addEventListener('click', () => {
                        const isVisible = newAddressForm.style.display === 'block';
                        newAddressForm.style.display = isVisible ? 'none' : 'block';
                        addAddressToggle.innerHTML = isVisible ? '+ Add New Address' : '- Hide Address Form';
                    });
                }

                // Toggle Edit Address Form
                window.toggleEditForm = function (index) {
                    const editForm = document.getElementById(`editForm-${index}`);
                    if (editForm) {
                        const isVisible = editForm.style.display === 'block';
                        editForm.style.display = isVisible ? 'none' : 'block';
                    }
                };

                // Form validation
                function validateForm(form) {
                    const inputs = form.querySelectorAll('input[required], select[required]');
                    let isValid = true;

                    // Reset all validations first
                    inputs.forEach(input => input.classList.remove('is-invalid'));

                    inputs.forEach(input => {
                        if (!input.value.trim()) {
                            input.classList.add('is-invalid');
                            isValid = false;
                        } else if (input.pattern) {
                            const regex = new RegExp(input.pattern);
                            if (!regex.test(input.value.trim())) {
                                input.classList.add('is-invalid');
                                isValid = false;
                            }
                        }
                    });

                    if (!isValid) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Validation Error',
                            text: 'Please fill all required fields correctly',
                            confirmButtonColor: '#3085d6'
                        });
                    }

                    return isValid;
                }

                // Add Address Form Submission
                const addAddressForm = document.getElementById('addAddressForm');
                if (addAddressForm) {
                    addAddressForm.addEventListener('submit', async function (e) {
                        e.preventDefault();

                        if (!validateForm(this)) return;

                        const formData = new FormData(this);
                        const data = Object.fromEntries(formData);

                        try {
                            const response = await fetch('/addAddress', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            });

                            if (!response.ok) throw new Error('Failed to add address');

                            const result = await response.json();

                            await Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: 'Address added successfully',
                                confirmButtonColor: '#3085d6'
                            });

                            window.location.reload();
                        } catch (error) {
                            console.error('Error adding address:', error);
                            Swal.fire({
                                icon: 'error',
                               
                                text: 'Failed to add address. Please try again.',
                                confirmButtonColor: '#3085d6'
                            });
                        }
                    });

                    // Add input event listeners to remove invalid class when user types
                    addAddressForm.querySelectorAll('input, select').forEach(input => {
                        input.addEventListener('input', () => {
                            input.classList.remove('is-invalid');
                        });
                    });
                }

                //--------------------edit address form submission----------------
                const editForms = document.querySelectorAll('[id^="editAddressForm-"]');
                editForms.forEach(form => {
                    const id = form.getAttribute('data-address-id');
                    form.addEventListener('submit', async (e, id) => {
                        e.preventDefault();
                        const form = event.target;

                        if (!validateForm(form)) return;

                        const formData = new FormData(form);
                        const data = Object.fromEntries(formData);

                        try {
                            const response = await fetch(`/editAddress/${id}`, {
                                method: 'PATCH',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            });

                            if (!response.ok) {
                                throw new Error('Failed to edit address');
                            }

                            const result = await response.json();

                            await Swal.fire({
                                icon: 'success',
                               
                                text: 'Address updated successfully',
                                confirmButtonColor: '#3085d6'
                            });

                            window.location.reload();
                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                               
                                text: 'Failed to update address. Please try again.',
                                confirmButtonColor: '#3085d6'
                            });
                            console.error('Error editing address:', error);
                        }


                    });
                });
                //--------------------------delete address-----------------------
                const deleteButtons = document.querySelectorAll('.delete-address-btn');
                deleteButtons.forEach(button => {
                    const id = button.getAttribute('data-address-id');
                    button.addEventListener('click', () => async (id) => {
                        const result = await Swal.fire({
                            title: 'Are you sure?',
                            text: "You won't be able to revert this!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, delete it!'
                        });

                        if (result.isConfirmed) {
                            try {
                                const response = await fetch(`/deleteAddress/${id}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    }
                                });

                                const data = await response.json();

                                if (data.success) {
                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: data.message || 'Address has been deleted.',
                                        confirmButtonColor: '#3085d6'
                                    });
                                    // Remove the address element from DOM or reload the page
                                    const addressElement = document.querySelector(`[data-address-id="${id}"]`).closest('.form-check');
                                    if (addressElement) {
                                        addressElement.remove();
                                    } else {
                                        window.location.reload();
                                    }
                                } else {
                                    throw new Error(data.message || 'Failed to delete address');
                                }

                            } catch (error) {
                                Swal.fire({
                                    icon: 'error',
                                    
                                    text: 'Failed to delete address. Please try again.',
                                    confirmButtonColor: '#3085d6'
                                });
                                console.error('Error deleting address:', error);
                            }
                        }
                    });
                });

                //-------------------------------address managment end---------------------------------------------------


                //-------------------------------order managment start---------------------------------------------------
                // Place Order
                const placeOrderBtn = document.getElementById('placeOrderBtn');
                if (placeOrderBtn) {

                    placeOrderBtn.addEventListener('click', function () {
                        const selectedAddressRadio = document.querySelector('input[name="addressType"]:checked');
                        const selectedPaymentRadio = document.querySelector('input[name="payment_option"]:checked');
                        console.log('Selected address:', selectedAddressRadio.value);
                        console.log('Selected payment method:', selectedPaymentRadio.value);

                        if (!selectedAddressRadio) {
                            //alert('Please select a delivery address');
                            Swal.fire({
                                icon: 'error',
                               
                                text: 'Please select a delivery address.',
                                confirmButtonColor: '#3085d6'

                            })
                            return;
                        }

                        if (!selectedPaymentRadio) {
                            //alert('Please select a payment method');
                            Swal.fire({
                                icon: 'error',
                          
                                text: 'Please select a payment method.',
                                confirmButtonColor: '#3085d6'
                            })
                            return;
                        }
                        const addressId = selectedAddressRadio.value;
                        const paymentMethod = selectedPaymentRadio.value
                        placeOrder(addressId, paymentMethod);
                    })
                }

                //---------------------------------place order function----------------------------
                function placeOrder(addressId, paymentMethod) {
                    fetch('/placeOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ address: addressId, paymentMethod: paymentMethod })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                if (paymentMethod === 'CashOnDelivery') {
                                    window.location.href = '/orderSuccess?orderId=' + data.orderId;
                                } else if (paymentMethod === 'Online') {
                                    initiateRazorpayPayment(data);
                                }
                            } else {
                                //alert(data.message || 'Error occurred while placing order');
                                Swal.fire({
                                    
                                    text: data.message || 'Error occurred while placing order.',
                                    confirmButtonColor: '#3085d6',

                                })
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            //alert('An error occurred while placing the order');
                            Swal.fire({
                               
                                text: 'An error occurred while placing the order.',
                                confirmButtonText: 'Ok'
                            })
                        });
                }
                //-------------------------------------Razor pay initialization-------------------------------

                function initiateRazorpayPayment(orderData) {
                    const options = {
                        key: 'rzp_test_trhZpz0cQLRJsN',
                        amount: orderData.amount,
                        currency: orderData.currency,
                        name: 'Perfume Castle',
                        description: 'Purchase Description',
                        order_id: orderData.razorpayOrderId,
                        handler: function (response) {
                            verifyPayment(response, orderData.orderId);
                        },
                        prefill: {
                            name: 'Customer Name',
                            email: 'customer@example.com',
                            contact: '9999999999'
                        },
                        theme: {
                            color: '#3399cc'
                        }
                    };

                    const rzp = new Razorpay(options);
                    rzp.on('payment.failed', function (response) {
                        // Immediately update order status to Failed
                        fetch('/updatePaymentStatus', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                orderId: orderData.orderId,
                                razorpayOrderId: response.error.metadata.order_id,
                                status: 'Failed',
                                error: response.error.description
                            })
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        
                                        text: 'Payment failed: ' + response.error.description,
                                        icon: 'error',
                                        confirmButtonText: 'Ok'
                                    }).then(() => {
                                        // Redirect to orders page or retry payment
                                        window.location.href = '/orders';
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error updating payment status:', error);
                                Swal.fire({
                                    
                                    text: 'An error occurred while processing payment failure',
                                    icon: 'error',
                                    confirmButtonText: 'Ok'
                                });
                            });
                    });
                    rzp.open();
                }

               

                //------------------------------verify razorpay payment----------------------

                function verifyPayment(paymentResponse, orderId) {
                    fetch('/verifyRazorpayPayment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            razorpay_payment_id: paymentResponse.razorpay_payment_id,
                            razorpay_order_id: paymentResponse.razorpay_order_id,
                            razorpay_signature: paymentResponse.razorpay_signature,
                            orderId: orderId
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Payment successful, update order status and redirect to orders page
                                
                                //window.location.href = '/orderSuccess?orderId=' + data.orderId;
                                window.location.href = '/orders'
                            } else {

                                Swal.fire({
                                    title: 'Payment verification failed',
                                    text: data.message || 'Payment verification failed',
                                    icon: 'error',
                                    confirmButtonText: 'Try Again'

                                })

                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            // Update payment status on error
                            updatePaymentStatus(orderId, paymentResponse.razorpay_order_id);
                            Swal.fire({
                                title: 'Payment error',
                                text: 'An error occurred while verifying the payment',
                                icon: 'error',
                                confirmButtonText: 'Try Again'
                            })
                        });
                }


                //----------------------------------------------------------------------------
                // Reset validation state when input changes
                document.addEventListener('input', function (e) {
                    if (e.target.classList.contains('is-invalid')) {
                        e.target.classList.remove('is-invalid');
                        const feedback = e.target.nextElementSibling;
                        if (feedback && feedback.classList.contains('invalid-feedback')) {
                            feedback.textContent = '';
                        }
                    }
                });

                //-------------------------------order managment end---------------------------------------------------
            });

        </script>

        <%- include('../partials/user/footer.ejs') %>